Timer unit: 1e-07 s

Total time: 0.163895 s
File: n:\Spingle\springle\SpringleCircle.py
Function: _get_cached_gradient at line 60

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    60                                               def _get_cached_gradient(self, size, color, alpha):
    61                                                   """Get or create a cached gradient surface."""
    62      3528      28622.0      8.1      1.7          cache_key = self._get_cache_key(size, color, alpha)
    63                                                   
    64      3528       6539.0      1.9      0.4          if cache_key not in self.gradient_cache:
    65                                                       # Create new gradient surface if not in cache
    66      3528    1586777.0    449.8     96.8              surface = self._create_gradient_circle(size, color, alpha)
    67                                                       
    68                                                       # Only cache if size is within reasonable limits
    69      3528       6018.0      1.7      0.4              if size <= self.max_cached_size:
    70      3528       7523.0      2.1      0.5                  self.gradient_cache[cache_key] = surface
    71      3528       3472.0      1.0      0.2              return surface
    72                                                   
    73                                                   return self.gradient_cache[cache_key]

Total time: 0.118377 s
File: n:\Spingle\springle\SpringleCircle.py
Function: _create_gradient_circle at line 75

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    75                                               def _create_gradient_circle(self, size, color, alpha):
    76                                                   """Create a circle with a radial gradient effect."""
    77      3528      69005.0     19.6      5.8          surface = pygame.Surface((int(size * 2), int(size * 2)), pygame.SRCALPHA)
    78      3528       5312.0      1.5      0.4          center = (size, size)
    79                                                   
    80                                                   # Optimize number of steps based on size
    81      3528      11987.0      3.4      1.0          num_steps = min(15, max(5, int(size / 4)))
    82                                                   
    83                                                   # Draw base gradient circles
    84     42768      58115.0      1.4      4.9          for i in range(num_steps):
    85     39240      74682.0      1.9      6.3              current_radius = size * (1 - (i / num_steps))
    86     39240      51068.0      1.3      4.3              gradient_factor = i / num_steps
    87     39240      49887.0      1.3      4.2              gradient_color = (
    88     39240      95449.0      2.4      8.1                  int(color[0] * (1 - gradient_factor * 0.5)),
    89     39240      80467.0      2.1      6.8                  int(color[1] * (1 - gradient_factor * 0.5)),
    90     39240      79610.0      2.0      6.7                  int(color[2] * (1 - gradient_factor * 0.5)),
    91     39240      78857.0      2.0      6.7                  int(alpha * (1 - gradient_factor * 0.3))
    92                                                       )
    93     39240     525311.0     13.4     44.4              pygame.draw.circle(surface, gradient_color, center, current_radius)
    94                                                   
    95      3528       4022.0      1.1      0.3          return surface

Total time: 0.0337825 s
File: n:\Spingle\springle\SpringleCircle.py
Function: should_add_trail_point at line 120

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
   120                                               def should_add_trail_point(self, new_pos, last_pos, circle_size, space_factor, dt=0):
   121                                                   """Determine if a new trail point should be added based on distance."""
   122     36343      46303.0      1.3     13.7          if last_pos is None:
   123       136        156.0      1.1      0.0              return True
   124     36207      72684.0      2.0     21.5          dx = new_pos[0] - last_pos[0]
   125     36207      62892.0      1.7     18.6          dy = new_pos[1] - last_pos[1]
   126     36207      93549.0      2.6     27.7          distance = math.sqrt(dx * dx + dy * dy)
   127     36207      62241.0      1.7     18.4          return (distance >= circle_size * space_factor)

Total time: 0.0274631 s
File: n:\Spingle\springle\SpringleCircle.py
Function: calculate_circle_size at line 129

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
   129                                               def calculate_circle_size(self, radius, base_size, size_variation):
   130                                                   """Calculate circle size based on radius from center."""
   131     54762     182148.0      3.3     66.3          size_factor = math.log(radius + 1) / 5 if radius > 0 else 1
   132     54762      92483.0      1.7     33.7          return base_size * size_variation * size_factor

Total time: 2.37282 s
File: n:\Spingle\springle\SpringleCircle.py
Function: update at line 134

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
   134                                               def update(self, dt, min_circles, max_circles, 
   135                                                            radial_velocity, angular_velocity,
   136                                                            radial_acceleration, angular_acceleration, 
   137                                                            base_size, mouse_button_pressed, mouse_pos, fade_duration,
   138                                                         space_factor):
   139                                                   """Update all groups and handle mouse interaction."""
   140                                                   # Update fade duration from slider
   141       456       3216.0      7.1      0.0          self.fade_duration = fade_duration
   142       456        929.0      2.0      0.0          need_new_group = False
   143                                                   
   144                                                   # Handle mouse input
   145       456       1090.0      2.4      0.0          if mouse_button_pressed and mouse_pos:
   146       143        337.0      2.4      0.0              if not self.mouse_control.is_dragging:
   147                                                           # Start new drag
   148        13       1674.0    128.8      0.0                  self.mouse_control.start_drag(mouse_pos)
   149                                                           
   150                                                           # Create new group at click position
   151        26      86168.0   3314.2      0.4                  new_group = OrbitGroup(
   152        13         27.0      2.1      0.0                      min_circles, max_circles, 0, base_size, 
   153        13         27.0      2.1      0.0                      0, 0,
   154        13         19.0      1.5      0.0                      0, 0, True
   155                                                           )
   156        13       6287.0    483.6      0.0                  new_group.set_group_position(mouse_pos, self.center)
   157        13         67.0      5.2      0.0                  self.groups.append(new_group)
   158                                                       else:
   159                                                           # Update existing drag
   160       130      12040.0     92.6      0.1                  self.mouse_control.update_drag(mouse_pos, dt)
   161                                                           
   162                                                           # Update most recent group's position
   163       130        223.0      1.7      0.0                  if self.groups:
   164       130        236.0      1.8      0.0                      latest_group = self.groups[-1]
   165       130      59678.0    459.1      0.3                      latest_group.set_group_position(mouse_pos, self.center)
   166                                                   
   167       313       1913.0      6.1      0.0          elif self.mouse_control.is_dragging:
   168                                                       # Handle mouse release
   169        13       3852.0    296.3      0.0              velocity = self.mouse_control.end_drag()
   170        13         24.0      1.8      0.0              if self.groups:
   171        13         21.0      1.6      0.0                  latest_group = self.groups[-1]
   172        13       3895.0    299.6      0.0                  latest_group.handle_mouse_release(mouse_pos, velocity, self.center)
   173                                                   
   174                                                   # Update spawn cooldown
   175       456       2640.0      5.8      0.0          if self.spawn_cooldown > 0:
   176       455       2089.0      4.6      0.0              self.spawn_cooldown -= dt
   177                                           
   178                                                   # Update all groups
   179       456        647.0      1.4      0.0          active_groups = 0
   180      5009       9789.0      2.0      0.0          for group in self.groups:
   181      4553      10184.0      2.2      0.0              if not group.active:
   182       455        499.0      1.1      0.0                  continue
   183                                           
   184      4098       7605.0      1.9      0.0              active_groups += 1
   185                                                           
   186                                                       # Update parameters from sliders
   187      4098     168050.0     41.0      0.7              group.update_circle_acceleration(radial_acceleration, angular_acceleration)
   188                                           
   189                                                       # TODO update the base size via some randomizing function
   190      4098      97841.0     23.9      0.4              group.update_circle_size(base_size)
   191                                                       
   192                                                       # Update color transition
   193      4098      11965.0      2.9      0.1              group.color_transition += dt * self.color_transition_speed
   194      4098       8224.0      2.0      0.0              if group.color_transition >= 1:
   195         6          9.0      1.5      0.0                  group.color_transition = 0
   196         6         68.0     11.3      0.0                  group.palette_index = (group.palette_index + 1) % self.colors.numPatterns()
   197                                                       
   198                                                       # Update circle positions
   199      4098    1877139.0    458.1      7.9              group.update_circle_positions(dt)
   200                                                       
   201                                                       # Check if group is still visible
   202      4098      68648.0     16.8      0.3              group.active = group.is_circle_visible((self.WIDTH, self.HEIGHT))
   203                                                       
   204                                                       # Update trails
   205     40441      53284.0      1.3      0.2              for circle in group.circles:
   206                                                           # Get current position
   207     36343     599524.0     16.5      2.5                  x, y = group.get_circle_cartesian_pos(circle, self.center)
   208                                                           
   209                                                           # Calculate circle properties
   210     72686     473360.0      6.5      2.0                  current_size = self.calculate_circle_size(
   211     36343     151062.0      4.2      0.6                      circle['motion'].radius,
   212     36343      55130.0      1.5      0.2                      circle['base_size'],
   213     36343      47099.0      1.3      0.2                      circle['size_variation']
   214                                                           )
   215                                                           
   216                                                           # Calculate color
   217     36343    1186847.0     32.7      5.0                  color = self.colors.getColor(group.palette_index, circle['color_index'], group.color_transition)
   218                                                           
   219                                                           # Add trail point if needed
   220     72686     762054.0     10.5      3.2                  if self.should_add_trail_point((x, y), circle['last_trail_pos'], 
   221     36343      43462.0      1.2      0.2                                               current_size, space_factor):
   222     11901      33289.0      2.8      0.1                      circle['trail'].append((x, y, color, current_size, 0.0))
   223     11901      24825.0      2.1      0.1                      circle['last_trail_pos'] = (x, y)
   224                                                           
   225                                                           # Update trail ages and remove old points
   226     36343      45229.0      1.2      0.2                  updated_trail = []
   227   2167470    3058422.0      1.4     12.9                  for point in circle['trail']:
   228   2131127    3796347.0      1.8     16.0                      px, py, pcolor, psize, age = point
   229   2131127    3083602.0      1.4     13.0                      new_age = age + dt
   230   2131127    3096501.0      1.5     13.0                      if new_age < self.fade_duration:
   231   2131127    4468084.0      2.1     18.8                          updated_trail.append((px, py, pcolor, psize, new_age))
   232     36343     294587.0      8.1      1.2                  circle['trail'] = updated_trail
   233                                                   
   234       456       1139.0      2.5      0.0          if self.spawn_cooldown <= 0:
   235         2          2.0      1.0      0.0                  need_new_group = True
   236         2          4.0      2.0      0.0                  self.spawn_cooldown = 4.0
   237                                                           
   238                                                   # Spawn new group if needed
   239       456        873.0      1.9      0.0          if need_new_group and active_groups < MAX_GROUPS:
   240         2       6380.0   3190.0      0.0              new_group = OrbitGroup(
   241         1          3.0      3.0      0.0                      min_circles, max_circles, 0, base_size, 
   242         1          1.0      1.0      0.0                      radial_velocity, angular_velocity,
   243         1          1.0      1.0      0.0                      radial_acceleration, angular_acceleration, False
   244                                                           )
   245         1          3.0      3.0      0.0              self.groups.append(new_group)

Total time: 37.8015 s
File: n:\Spingle\springle\SpringleCircle.py
Function: draw at line 247

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
   247                                               def draw(self, screen, max_alpha):
   248                                                   """Draw all groups and their trails."""
   249       300        535.0      1.8      0.0          drawable_elements = []
   250                                                   
   251      3450       5535.0      1.6      0.0          for group in self.groups:
   252      3150       5515.0      1.8      0.0              if not group.active:
   253       331        333.0      1.0      0.0                  continue
   254                                                           
   255                                                       # Add trails
   256     27890      34816.0      1.2      0.0              for circle in group.circles:
   257   1581140    2842229.0      1.8      0.8                  for x, y, color, size, age in circle['trail']:
   258   1556069    3730768.0      2.4      1.0                      if 0 <= x <= self.WIDTH and 0 <= y <= self.HEIGHT:
   259   1156479    1746269.0      1.5      0.5                          fade_progress = age / self.fade_duration
   260   1156479    2499803.0      2.2      0.7                          alpha = int(max_alpha * (1 - fade_progress))
   261   1156479    1650285.0      1.4      0.4                          if alpha > 10:
   262   2312958    4839026.0      2.1      1.3                              drawable_elements.append({
   263   1156479    1216074.0      1.1      0.3                                  'type': 'trail',
   264   1156479    1202690.0      1.0      0.3                                  'x': x,
   265   1156479    1066146.0      0.9      0.3                                  'y': y,
   266   1156479    1053529.0      0.9      0.3                                  'color': color,
   267   1156479    1058313.0      0.9      0.3                                  'size': size,
   268   1156479    1047198.0      0.9      0.3                                  'age': age,
   269   1156479    1044751.0      0.9      0.3                                  'alpha': alpha
   270                                                                       })
   271                                                       
   272                                                       # Add current circles
   273     27890      39372.0      1.4      0.0              for circle in group.circles:
   274     25071     405341.0     16.2      0.1                  x, y = group.get_circle_cartesian_pos(circle, self.center)
   275                                                           
   276     25071      74256.0      3.0      0.0                  if 0 <= x <= self.WIDTH*1.2 and 0 <= y <= self.HEIGHT*1.2:
   277     18419     496299.0     26.9      0.1                      color = self.colors.getColor(group.palette_index, circle['color_index'], group.color_transition)
   278                                                               
   279     36838     230699.0      6.3      0.1                      size = self.calculate_circle_size(
   280     18419      74523.0      4.0      0.0                          circle['motion'].radius,
   281     18419      26921.0      1.5      0.0                          circle['base_size'],
   282     18419      20233.0      1.1      0.0                          circle['size_variation']
   283                                                               )
   284                                                               
   285     36838      66696.0      1.8      0.0                      drawable_elements.append({
   286     18419      19101.0      1.0      0.0                          'type': 'circle',
   287     18419      20658.0      1.1      0.0                          'x': x,
   288     18419      18746.0      1.0      0.0                          'y': y,
   289     18419      18746.0      1.0      0.0                          'color': color,
   290     18419      18094.0      1.0      0.0                          'size': size,
   291     18419      18602.0      1.0      0.0                          'age': -1,
   292     18419      16616.0      0.9      0.0                          'alpha': 255
   293                                                               })
   294                                                   
   295                                                   # Sort by age so older trails are drawn first
   296                                                   # drawable_elements.sort(key=lambda x: x.get('age', -1), reverse=True)
   297                                                   
   298                                                   # Draw all elements with gradient effect
   299   1175198    1614964.0      1.4      0.4          for element in drawable_elements:
   300                                                       # gradient_surface = self._get_cached_gradient(
   301   2349796  327267378.0    139.3     86.6              gradient_surface = self.create_gradient_circle(
   302   1174898    1772909.0      1.5      0.5                  element['size'], 
   303   1174898    1382240.0      1.2      0.4                  element['color'], 
   304   1174898    1442704.0      1.2      0.4                  element['alpha']
   305                                                       )
   306   2349796   13820189.0      5.9      3.7              screen.blit(gradient_surface, (
   307   1174898    2152400.0      1.8      0.6                  element['x'] - element['size'],
   308   1174898    1953477.0      1.7      0.5                  element['y'] - element['size']
   309                                                       ))

